<div class="panel panel-default">
  <div class="panel-heading">
    <div class="pull-right"><a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-calendar"></i> <i class="caret"></i></a>
      <ul id="range" class="dropdown-menu dropdown-menu-right">
        <li><a href="day">{{ text_day }}</a></li>
        <li><a href="week">{{ text_week }}</a></li>
        <li class="active"><a href="month">{{ text_month }}</a></li>
        <li><a href="year">{{ text_year }}</a></li>
      </ul>
    </div>
    <h3 class="panel-title"><i class="fa fa-bar-chart-o"></i> {{ heading_title }}</h3>
  </div>
  <div class="panel-body">
    <div style="position: relative; height:260px; width:100%;">
	<div id="chart-legend" style="position: relative;"></div>
      <canvas id="chart-sale"></canvas>
    </div>
  </div>
</div>
<script type="text/javascript" src="view/javascript/chartjs/chartjs.js"></script> 
<script type="text/javascript">
const getOrCreateLegendList = (chart, id) => {
  const legendContainer = document.getElementById(id);
  let listContainer = legendContainer.querySelector('ul');
  if (!listContainer) {
    listContainer = document.createElement('ul');
    listContainer.style.display = 'flex';
    listContainer.style.flexDirection = 'column';
    listContainer.style.justifyContent = 'flex-end'; 
    listContainer.style.padding = '2px 5px';
    listContainer.style.fontSize = '10px'; 
    listContainer.style.gap = '2px';
    legendContainer.style.position = 'absolute';
    legendContainer.style.top = '15px';
    legendContainer.style.right = '13px';
    legendContainer.style.pointerEvents = 'auto';
    legendContainer.appendChild(listContainer);
  }
  return listContainer;
};

let chartInstance = null;
$('#range a').on('click', function(e) {
    e.preventDefault();
    $(this).parent().parent().find('li').removeClass('active');
    $(this).parent().addClass('active');
    
    $.ajax({
        type: 'get',
        url: 'index.php?route=extension/dashboard/chart/chart&user_token={{ user_token }}&range=' + $(this).attr('href'),
        dataType: 'json',
        success: function(json) {
            
            if (typeof json['order'] == 'undefined') { 
                return false; 
            }
            if (chartInstance) {
                chartInstance.destroy();
            }
            const labels = [];
            const orderData = [];
            const customerData = [];
            
            if (json['xaxis'] && Array.isArray(json['xaxis'])) {
                json['xaxis'].forEach(function(item) {
                    if (Array.isArray(item) && item.length >= 2) {
                        labels.push(item[1]);
                    }
                });
            }
            if (json['order'] && json['order']['data'] && Array.isArray(json['order']['data'])) {
                json['order']['data'].forEach(function(item) {
                    if (Array.isArray(item) && item.length >= 2) {
                        orderData.push(item[1]); 
                    }
                });
            }
            if (json['customer'] && json['customer']['data'] && Array.isArray(json['customer']['data'])) {
                json['customer']['data'].forEach(function(item) {
                    if (Array.isArray(item) && item.length >= 2) {
                        customerData.push(item[1]); 
                    }
                });
            }
            
            if (orderData.length === 0 && customerData.length === 0) {
                $('#chart-sale').closest('.panel-body').html('<div class="text-center text-muted"><i class="fa fa-exclamation-circle"></i> داده‌ای برای نمایش وجود ندارد</div>');
                return;
            }
            
            // ایجاد نمودار
            try {
                const ctx = document.getElementById('chart-sale').getContext('2d');
                chartInstance = new Chart(ctx, {
					
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: json['order']['label'] || 'سفارشات',
                                data: orderData,
                                backgroundColor: 'rgba(76, 176, 79, 0.6)',
                                borderColor: 'rgb(76, 176, 79)',
                                borderWidth: 2,
								tension: 0.2,
          						pointRadius: 3,
          						pointHoverRadius: 10
                            },
                            {
                                label: json['customer']['label'] || 'مشتریان',
                                data: customerData,
                                backgroundColor: 'rgb(39, 151, 242, 0.6)',
                                borderColor: 'rgb(39, 151, 242)',
                                borderWidth: 2,
								tension: 0.2,
          						pointRadius: 3,
          						pointHoverRadius: 10
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                display: true
                            },
                            y: {
                                beginAtZero: true,
								ticks: {
  									precision: 0 ,
									beginAtZero: true
								},
								min: 0,
            					suggestedMax: 4
                            }
                        },
                        plugins: {
                            legend: {
                                display: false,
                            }
                        }
                    }
                });
	const legendList = getOrCreateLegendList(chartInstance, 'chart-legend');
	legendList.innerHTML = '';
	chartInstance.data.datasets.forEach(dataset => {
    const li = document.createElement('li');
    li.style.display = 'flex';
    li.style.alignItems = 'center';
    li.style.gap = '4px';
    const box = document.createElement('span');
    box.style.backgroundColor = dataset.borderColor;
    box.style.width = '12px';
    box.style.height = '12px';
    box.style.display = 'inline-block';
    const text = document.createElement('span');
    text.innerText = dataset.label;
    li.appendChild(box);
    li.appendChild(text);
    legendList.appendChild(li);
	li.style.cursor = 'pointer';
    li.addEventListener('click', () => {
        dataset.hidden = !dataset.hidden; 
        chartInstance.update();
    });
});

            } catch (error) {
                console.error('خطا در ایجاد نمودار:', error);
            }
        },
        error: function(xhr, ajaxOptions, thrownError) {
           console.error('Error:', thrownError);
        }
    });
});


$(document).ready(function() {
    $('#range .active a').trigger('click');
});
//--></script>